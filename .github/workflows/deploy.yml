name: Deploy Pluct Business Engine

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Verify Wrangler Installation
        run: npx wrangler --version

      - name: Set ENGINE_JWT_SECRET
        run: echo "${{ secrets.ENGINE_JWT_SECRET }}" | npx wrangler secret put ENGINE_JWT_SECRET
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Set ENGINE_ADMIN_KEY
        run: echo "${{ secrets.ENGINE_ADMIN_KEY }}" | npx wrangler secret put ENGINE_ADMIN_KEY
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Set TTT_SHARED_SECRET
        run: echo "${{ secrets.TTT_SHARED_SECRET }}" | npx wrangler secret put TTT_SHARED_SECRET
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Create D1 Database
        run: |
          npx wrangler d1 create pluct-business-engine --json | jq -r '.result.id' > d1_id.txt
          echo "D1 Database ID: $(cat d1_id.txt)"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Update wrangler.toml with D1 ID
        run: |
          if [ -f d1_id.txt ]; then
            D1_ID=$(cat d1_id.txt)
            sed -i "s/database_id = \"pluct-business-engine-db\"/database_id = \"$D1_ID\"/" wrangler.toml
            echo "Updated wrangler.toml with D1 ID: $D1_ID"
          fi

      - name: Deploy Worker
        run: npx wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Verify Deployment
        run: |
          echo "Deployment completed successfully!"
          echo "Your worker is now live at: https://pluct-business-engine.romeo-lya2.workers.dev"
          echo "Testing health endpoint..."
          curl -f https://pluct-business-engine.romeo-lya2.workers.dev/health || echo "Health check failed - this is normal for new deployments"